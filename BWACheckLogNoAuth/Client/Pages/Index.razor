@using BWACheckLogNoAuth.Shared.Models
@using System.Text.Json
@using System.Text.Json.Serialization
@page "/"
@inject HttpClient Http

<h1>[Meratus] Check-Log</h1>

@if (listSurveyQuestion == null)
{
    <p><em>Loading...</em></p>
}
else
{


    @*<div>
            <div id="question1">
                @surveyQuestions[0].Question
            </div>
            <div id="desc1">
                @surveyQuestions[0].Description
            </div>
            <div id="answer1">
                @if (surveyQuestions[0].SurveyAnswers.First().AnswerType.Equals("Dropdown"))
                {
                    <select id="answer-opt1" @onchange="@handleChange">
                        @foreach (var answer in surveyQuestions[0].SurveyAnswers)
                        {
                            <option value="@(answer.Answer + "_" + answer.NextQuestion.ToString())">@answer.Answer</option>
                        }
                    </select>
                }
                else if (surveyQuestions[0].SurveyAnswers.First().AnswerType.Equals("TextBox"))
                {
                    <input for="Name" class="form-control" @bind="@tempAnswerText" />
                }
            </div>
        </div>*@
    <QuestionTemplate currQuestion="1" surveyQuestion="@listSurveyQuestion[0]"
                      onChangeDropCallBack="@HandleChangeDrop">
    </QuestionTemplate>

    @if (currQuestion >= 2)
    {
        <QuestionTemplate currQuestion="2"
                          surveyQuestion="@listSurveyQuestion.Where(x => x.Id == listTempResponse[0].NextQuestionId).FirstOrDefault()"
                          onChangeDropCallBack="@HandleChangeDrop"
                          CbItemClicked = "@HandleCheckBoxClick"
                          onChangeTextBoxCallBack="@HandleChangeTextBox"
                          @bind-TbAnswer="tbAnswer"
                          >
        </QuestionTemplate>
    }
    @if (currQuestion >= 3)
    {
        <QuestionTemplate currQuestion="3"
                          surveyQuestion="@listSurveyQuestion.Where(x => x.Id == listTempResponse[1].NextQuestionId).FirstOrDefault()"
                          onChangeDropCallBack="@HandleChangeDrop"
                          CbItemClicked = "@HandleCheckBoxClick"
                          onChangeTextBoxCallBack="@HandleChangeTextBox"
                          @bind-TbAnswer="tbAnswer"
                          >
        </QuestionTemplate>
    }
    @if (currQuestion >= 4)
    {
        <QuestionTemplate currQuestion="4"
                          surveyQuestion="@listSurveyQuestion.Where(x => x.Id == listTempResponse[2].NextQuestionId).FirstOrDefault()"
                          onChangeDropCallBack="@HandleChangeDrop"
                          CbItemClicked = "@HandleCheckBoxClick"
                          onChangeTextBoxCallBack="@HandleChangeTextBox"
                          @bind-TbAnswer="tbAnswer">
        </QuestionTemplate>
    }
    @if (currQuestion >= 5)
    {
        <QuestionTemplate currQuestion="5"
                          surveyQuestion="@listSurveyQuestion.Where(x => x.Id == listTempResponse[3].NextQuestionId).FirstOrDefault()"
                          onChangeDropCallBack="@HandleChangeDrop"
                          CbItemClicked = "@HandleCheckBoxClick"
                          onChangeTextBoxCallBack="@HandleChangeTextBox"
                          @bind-TbAnswer="tbAnswer">
        </QuestionTemplate>
    }
    @if (currQuestion >= 6)
    {
        <QuestionTemplate currQuestion="6"
                          surveyQuestion="@listSurveyQuestion.Where(x => x.Id == listTempResponse[4].NextQuestionId).FirstOrDefault()"
                          onChangeDropCallBack="@HandleChangeDrop"
                          CbItemClicked = "@HandleCheckBoxClick"
                          onChangeTextBoxCallBack="@HandleChangeTextBox"
                          @bind-TbAnswer="tbAnswer">
        </QuestionTemplate>
    }
    @if (currQuestion >= 7)
    {
        <QuestionTemplate currQuestion="7"
                          surveyQuestion="@listSurveyQuestion.Where(x => x.Id == listTempResponse[5].NextQuestionId).FirstOrDefault()"
                          onChangeDropCallBack="@HandleChangeDrop"
                          CbItemClicked = "@HandleCheckBoxClick"
                          onChangeTextBoxCallBack="@HandleChangeTextBox"
                          @bind-TbAnswer="tbAnswer">
        </QuestionTemplate>
    }
    @if (currQuestion >= 8)
    {
        <QuestionTemplate currQuestion="8"
                          surveyQuestion="@listSurveyQuestion.Where(x => x.Id == listTempResponse[6].NextQuestionId).FirstOrDefault()"
                          onChangeDropCallBack="@HandleChangeDrop"
                          CbItemClicked = "@HandleCheckBoxClick"
                          onChangeTextBoxCallBack="@HandleChangeTextBox"
                          @bind-TbAnswer="tbAnswer">
        </QuestionTemplate>
    }
    @if (currQuestion >= 9)
    {
        <QuestionTemplate currQuestion="9"
                          surveyQuestion="@listSurveyQuestion.Where(x => x.Id == listTempResponse[7].NextQuestionId).FirstOrDefault()"
                          onChangeDropCallBack="@HandleChangeDrop"
                          CbItemClicked = "@HandleCheckBoxClick"
                          onChangeTextBoxCallBack="@HandleChangeTextBox"
                          @bind-TbAnswer="tbAnswer">
        </QuestionTemplate>
    }
    @if (currQuestion >= 10)
    {
        <QuestionTemplate currQuestion="10"
                          surveyQuestion="@listSurveyQuestion.Where(x => x.Id == listTempResponse[8].NextQuestionId).FirstOrDefault()"
                          onChangeDropCallBack="@HandleChangeDrop"
                          CbItemClicked = "@HandleCheckBoxClick"
                          onChangeTextBoxCallBack="@HandleChangeTextBox"
                          @bind-TbAnswer="tbAnswer">
        </QuestionTemplate>
    }
    @if (currQuestion >= 11)
    {
        <QuestionTemplate currQuestion="11"
                          surveyQuestion="@listSurveyQuestion.Where(x => x.Id == listTempResponse[9].NextQuestionId).FirstOrDefault()"
                          onChangeDropCallBack="@HandleChangeDrop"
                          CbItemClicked = "@HandleCheckBoxClick"
                          onChangeTextBoxCallBack="@HandleChangeTextBox"
                          @bind-TbAnswer="tbAnswer">
        </QuestionTemplate>
    }
    @if (currQuestion >= 12)
    {
        <QuestionTemplate currQuestion="12"
                          surveyQuestion="@listSurveyQuestion.Where(x => x.Id == listTempResponse[10].NextQuestionId).FirstOrDefault()"
                          onChangeDropCallBack="@HandleChangeDrop"
                          CbItemClicked = "@HandleCheckBoxClick"
                          onChangeTextBoxCallBack="@HandleChangeTextBox"
                          @bind-TbAnswer="tbAnswer">
        </QuestionTemplate>
    }
    @if (currQuestion >= 13)
    {
        <QuestionTemplate currQuestion="13"
                          surveyQuestion="@listSurveyQuestion.Where(x => x.Id == listTempResponse[11].NextQuestionId).FirstOrDefault()"
                          onChangeDropCallBack="@HandleChangeDrop"
                          CbItemClicked = "@HandleCheckBoxClick"
                          onChangeTextBoxCallBack="@HandleChangeTextBox"
                          @bind-TbAnswer="tbAnswer">
        </QuestionTemplate>
    }
    @if (currQuestion >= 14)
    {
        <QuestionTemplate currQuestion="14"
                          surveyQuestion="@listSurveyQuestion.Where(x => x.Id == listTempResponse[12].NextQuestionId).FirstOrDefault()"
                          onChangeDropCallBack="@HandleChangeDrop"
                          CbItemClicked = "@HandleCheckBoxClick"
                          onChangeTextBoxCallBack="@HandleChangeTextBox"
                          @bind-TbAnswer="tbAnswer">
        </QuestionTemplate>
    }
    @if (currQuestion >= 15)
    {
        <QuestionTemplate currQuestion="15"
                          surveyQuestion="@listSurveyQuestion.Where(x => x.Id == listTempResponse[13].NextQuestionId).FirstOrDefault()"
                          onChangeDropCallBack="@HandleChangeDrop"
                          CbItemClicked = "@HandleCheckBoxClick"
                          onChangeTextBoxCallBack="@HandleChangeTextBox"
                          @bind-TbAnswer="tbAnswer">
        </QuestionTemplate>
    }

    @if (listTempResponse.Count() > 0 && listTempResponse.Last().NextQuestionId.Equals(0))
    {
        <div class="form-group">
            <input type="submit" value="Submit" @onclick="@(async () => await SubmitData())" class="btn btn-primary" />
        </div>
    }



}


@code{
    private IList<SurveyQuestion> listSurveyQuestion;
    //private SurveyQuestion[] surveyQuestions;
    private UserResponse userResponse = new UserResponse();
    private ResponseDetail[] responseDetails;
    private IList<TempResponse> listTempResponse = new List<TempResponse>();
    private string tempAnswer = "";
    private string tbAnswer = "";
    private int currQuestion = 1;
    private int? nextQuestion;
    //private int nextIndex = 0;


    protected override async Task OnInitializedAsync()
    {
        //surveyQuestions = await Http.GetJsonAsync<SurveyQuestion[]>("/api/Survey/questions");

        //surveyQuestions.

        listSurveyQuestion = await Http.GetJsonAsync<IList<SurveyQuestion>>("/api/Survey/questions");

        //listSurveyQuestion
    }

    protected async Task SubmitData()
    {
        await Http.DeleteAsync("api/Recipe/delete/");
        Console.WriteLine(tempAnswer.ToString());

        //var jsonstr = JsonSerializer.Serialize(listTempResponse);
        //Console.WriteLine(jsonstr);

        foreach (var item in listTempResponse)
        {
            Console.WriteLine($"No:{item.QuestionNo} +time:{item.ResponseTime} +Q:{item.Question} +A:{item.Answer}");
        }
    }

    protected void Update(ResponseDetail responseDetail)
    {
        responseDetails.Append(responseDetail);
    }

    void EmployeeDeleted()
    {
        Console.WriteLine($"inside EmployeeDeleted: ~{currQuestion}");
    }

    public List<string> TempCbAnswer { get; set; } = new List<string>();

    private void HandleCheckBoxClick(string answer, object checkedValue, string qNo, int qId, int nextQ)
    {
        if ((bool)checkedValue)
        {
            if (!TempCbAnswer.Contains(answer))
            {
                TempCbAnswer.Add(answer);
            }
        }
        else
        {
            if (TempCbAnswer.Contains(answer))
            {
                TempCbAnswer.Remove(answer);
            }
        }

        foreach (var item in TempCbAnswer)
        {
            Console.WriteLine($"Check:{item}");
        }
        Console.WriteLine($"PARAM:{qNo}-{qId}-{nextQ}");
        Console.WriteLine($"TempCbAnswer.Count:{TempCbAnswer.Count}");
        if(TempCbAnswer.Count > 0)
        {
            Console.WriteLine($"nextQ:{nextQ}");
            if (nextQ > 0)
            {
                var newResponse = new TempResponse
                {
                    Answer = string.Join("; ", TempCbAnswer),
                    QuestionNo = int.Parse(qNo),
                    QuestionId = qId,
                    NextQuestionId = nextQ,
                    Question = listSurveyQuestion.Where(x => x.Id == qId).FirstOrDefault().Question,
                    ResponseTime = DateTime.UtcNow

                };

                UpdateResponse(newResponse);
            }
        }
        StateHasChanged();



    }


    void HandleChangeTextBox(ChangeEventArgs e)
    {
        tempAnswer = e.Value.ToString();
        Console.WriteLine("tbValue1:" + tempAnswer);
        Console.WriteLine("tbValue2:" + tbAnswer);

        nextQuestion = int.Parse((tbAnswer.Split('~')[1]).Split('_')[2]);
        if (nextQuestion >= 0)
        {
            var answer = tempAnswer;
            var questionNo = int.Parse((tbAnswer.Split('~')[1]).Split('_')[0]);
            var questionId = int.Parse((tbAnswer.Split('~')[1]).Split('_')[1]);
            var nextQuestionId = int.Parse((tbAnswer.Split('~')[1]).Split('_')[2]);

            var newResponse = new TempResponse
            {
                Answer = answer,
                QuestionNo = questionNo,
                QuestionId = questionId,
                NextQuestionId = nextQuestionId,
                Question = listSurveyQuestion.Where(x => x.Id == questionId).FirstOrDefault().Question,
                ResponseTime = DateTime.UtcNow

            };

            UpdateResponse(newResponse);
        }

        tempAnswer = "";
    }

    void HandleChangeDrop(ChangeEventArgs e)
    {
        tempAnswer = e.Value.ToString();
        Console.WriteLine("User Response No_Answ_NextQ: " + tempAnswer);
        nextQuestion = int.Parse((tempAnswer.Split('~')[1]).Split('_')[2]);
        if (nextQuestion >= 0)
        {

            var answer = tempAnswer.Split('~')[0];
            var questionNo = int.Parse((tempAnswer.Split('~')[1]).Split('_')[0]);
            var questionId = int.Parse((tempAnswer.Split('~')[1]).Split('_')[1]);
            var nextQuestionId = int.Parse((tempAnswer.Split('~')[1]).Split('_')[2]);

            var newResponse = new TempResponse
            {
                Answer = answer,
                QuestionNo = questionNo,
                QuestionId = questionId,
                NextQuestionId = nextQuestionId,
                Question = listSurveyQuestion.Where(x => x.Id == questionId).FirstOrDefault().Question,
                ResponseTime = DateTime.UtcNow

            };

            UpdateResponse(newResponse);
        }

        tempAnswer = "";
    }

    void UpdateResponse(TempResponse tempResponse)
    {
        var check = listTempResponse.FirstOrDefault(x => x.QuestionId.Equals(tempResponse.QuestionId));
        if (check != null)
        {
            Console.WriteLine("check != null:" + check.QuestionId);
            var idx = listTempResponse.IndexOf(check);
            Console.WriteLine("idx :" + idx);
            var count = listTempResponse.Count();
            Console.WriteLine("before listTempResponse.count :" + listTempResponse.Count);

            for (int i = idx; i < count; i++)
            {
                Console.WriteLine($"Question:{listTempResponse[idx].Question}-NextQuestionId:{listTempResponse[idx].NextQuestionId}");
                Console.WriteLine("RemoveAt(idx):" + idx);

                listTempResponse.RemoveAt(idx);
            }

            Console.WriteLine("listTempResponse.count :" + listTempResponse.Count);
            listTempResponse.Add(tempResponse);
            Console.WriteLine("after listTempResponse.count :" + listTempResponse.Count);
        }
        else
        {
            Console.WriteLine("check == null:");
            listTempResponse.Add(tempResponse);

            Console.WriteLine("listTempResponse.count :" + listTempResponse.Count);
        }

        if (listTempResponse.Last().NextQuestionId != 0)
        {
            currQuestion = listTempResponse.Count() + 1;
        }

        //foreach (var item in listTempResponse)
        //{
        //    Console.WriteLine($"No:{item.QuestionNo} +time:{item.ResponseTime} +Q:{item.Question} +A:{item.Answer}");
        //}

        //Console.WriteLine($"currQuestion:{currQuestion}");
    }
}
