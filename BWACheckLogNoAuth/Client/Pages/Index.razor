@using BWACheckLogNoAuth.Shared.Models
@page "/"
@inject HttpClient Http

<h1>[Meratus] Check-Log</h1>

@if (surveyQuestions == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div>
        <div id="question1">
            @surveyQuestions[0].Question
        </div>
        <div id="desc1">
            @surveyQuestions[0].Description
        </div>
        <div id="answer1">
            @if (surveyQuestions[0].SurveyAnswers.First().AnswerType.Equals("drop"))
            {
                <select id="answer-opt1" @onchange="@handleChange">
                    @foreach (var answer in surveyQuestions[0].SurveyAnswers)
                    {
                        <option value="@(answer.Answer + "_" + answer.NextQuestion.ToString())">@answer.Answer</option>
                    }
                </select>
            }
            else if (surveyQuestions[0].SurveyAnswers.First().AnswerType.Equals("TextBox"))
            {
                <input for="Name" class="form-control" @bind="@tempAnswerText" />
            }
        </div>
    </div>
    <br/>
    @if (currQuestion >= 2)
    {
        <div>
            <div id="question1">
                @surveyQuestions[nextIndex].Question
            </div>
            <div id="desc1">
                @surveyQuestions[nextIndex].Description
            </div>
            <div id="answer1">
                @if (surveyQuestions[nextIndex].SurveyAnswers.First().AnswerType.Equals("drop"))
                {
                    <select id="answer-opt1" @onchange="@handleChange">
                        @foreach (var answer in surveyQuestions[nextIndex].SurveyAnswers)
                        {
                            <option value="@(answer.Answer + "_" + answer.NextQuestion.ToString())">@answer.Answer</option>
                        }
                    </select>
                }
                else if (surveyQuestions[1].SurveyAnswers.First().AnswerType.Equals("TextBox"))
                {
                    <input for="Name" class="form-control" @bind="@tempAnswerText" />
                }
            </div>
        </div>
    }
    <div class="form-group">
        <input type="submit" value="Submit" @onclick="@(async () => await Delete())" class="btn btn-primary" />
    </div>
}


@code{

    private SurveyQuestion[] surveyQuestions;
    private UserResponse userResponse = new UserResponse();
    private ResponseDetail[] responseDetails;
    private string tempAnswer = "";
    private string tempAnswerText = "";
    private int currQuestion = 1;
    private int? nextQuestion;
    private int nextIndex = 0;


    protected override async Task OnInitializedAsync()
    {
        surveyQuestions = await Http.GetJsonAsync<SurveyQuestion[]>("/api/Survey/questions");
    }

    protected async Task Delete()
    {
        //await Http.DeleteAsync("api/Recipe/delete/");
        Console.WriteLine(tempAnswer.ToString());
    }

    protected void update(ResponseDetail responseDetail)
    {
        responseDetails.Append(responseDetail);
    }

    void handleChange(ChangeEventArgs e)
    {
        tempAnswer = e.Value.ToString();
        Console.WriteLine("It is definitely: " + tempAnswer);
        nextQuestion = int.Parse(tempAnswer.Split('_')[1]);
        //nextIndex = surveyQuestions.IndexOf
        var tes = surveyQuestions.ToList<SurveyQuestion>();
        nextIndex = tes.IndexOf(surveyQuestions.First(x => x.Id.Equals(nextQuestion)));
        
        tempAnswer = "";
        currQuestion++;
        //Console.WriteLine(tempAnswer.ToString());
    }
}
